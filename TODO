Built with: 39c0d3591e0326874b7263a621ce09ecd64f0eb2 (0.4)

http://www.springerlink.com/content/v2182674723t39g7/
http://www.google.com/url?sa=t&rct=j&q=rdf%20ontologies%20nms&source=web&cd=25&ved=0CEwQFjAEOBQ&url=http%3A%2F%2Fntnu.diva-portal.org%2Fsmash%2Fget%2Fdiva2%3A347850%2FFULLTEXT01&ei=rdjMT7uuK8KC2AWA6uC9DQ&usg=AFQjCNGg-wBiogJofkZLy4BQ2id48-CVRw
 
make && export RUST_LOG=gnos=2,rwebserve=2,socket=1,::rt::backtrace && ./bin/gnos --admin --root=html scripts/fat.json
http://10.4.0.3:8080/shutdown

airControl   http://www.ubnt.com/aircontrol
the dude   http://www.mikrotik.com/thedude.php/

http://htmldog.com/reference/htmltags/
http://www.metaltoad.com/html5-reference
http://dev.w3.org/html5/html-author/
https://github.com/jesse99/gnos

http://code.google.com/apis/chart/
http://code.google.com/apis/gdata/
http://canvasxpress.org/	good chart tlibrary
http://thejit.org/			cool networks, trees, etc
http://www.humblesoftware.com/flotr2/	charts
plotkit

http://www.skills-1st.co.uk/papers/jane/open_source_mgmt_options.pdf
http://www.apress.com/web-development/html/9781430239604
http://www.apress.com/web-development/html/9781430238645
http://www.apress.com/web-development/html/9781590598047
http://www.backtoessentials.com/tools/40-useful-print-ready-cheat-sheet-for-web-developers/
http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=13&ved=0CIYBEBYwAjgK&url=http%3A%2F%2Fnet.tutsplus.com%2Ftutorials%2Fhtml-css-techniques%2F30-html-best-practices-for-beginners%2F&ei=CuSjT5WvG_POiALRrdWABA&usg=AFQjCNFd0gD9wjSLpiSRWcUkUgR8RUH91w&sig2=oINB1YByitNzzJHODujABg
restful uris: http://redrata.com/restful-uri-design/
javascript model/view: http://documentcloud.github.com/backbone/


* It would be nice to support virtual networks better:
	- modeler could run on a virtual host
	- would have to do PUTs to a unique store
	- gnos home page would have to have a way to pick which store to show
* Need to detect server ip (so it works on different machines and after re-connecting to VPN)
	- or just switch to using libuv and fix that up as neccesary
	- add some code to socket to enumerate over local IPs
		http://www.doctort.org/adam/nerd-notes/enumerating-network-interfaces-on-linux.html
	- add a --server command line option to gnos and modelers
	- probably --port too
	- maybe add --url to modelers
	- --server should support (explicit) subnets
		try and find a matching local IP
	- allow multiple subnets
		makefile should use 10.4.0.0/24,10.0.0.0/8
* Need an L2 option:
	- also snmp: http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CFUQFjAA&url=http%3A%2F%2Fwww.cisco.com%2Fen%2FUS%2Ftech%2Ftk648%2Ftk362%2Ftechnologies_tech_note09186a00801c9199.shtml&ei=KDAdUMWsBYOGyQHmpIDQDw&usg=AFQjCNG7O3ox230HFyYMKT6966T399Z8wg&sig2=F3LAXDBFGp4L1ZdXMfWsyQ
	- add dynamic entities for each VLAN, only shown if options.L2
	- add static entities for the switch, guess this is always shown
	- add static entity for the bridge and ttnt, show if options.L2
	- modeler will have to change up wiring when options.L2
	- switch will need snmp enabled
	dot1dTpFdbPort maps peer MACs to ports
	vmMembershipSummaryMemberPorts maps ports to VLANs
	vlanTrunkPortVlansEnabled maps VLANs to trunks
	ifPhysAddress MAC for the switch port
* Support snmp traps
* net-modeler should be its own project
* Sliders and option dropdown values should be persisted in a pref:
	- use web storage?
	- not exactly clear when the prefs should be applied
	- set the pref when the associated value changes
	- use the pref when the associated widget is (re)initialized
* modeler should listen for generic traps and at least a few custom ones admins can add
	- standard generic traps are: coldStart, warmStart, linkDown, linkUp, authenticationFailure, egpNeighborLoss
	- net-snmp has fewer: http://www.net-snmp.org/tutorial/tutorial-5/commands/snmptrap.html
	- net-snmp can be configured to send custom traps: http://serverfault.com/questions/248332/set-up-snmp-trap-for-disk-usage
* Balloon layout is interesting:
	http://lab.kapit.fr/display/visualizationlayouts/Balloon+layout
* Add a details list for dropped packets:
	- ifInDiscards, ifInErrors, ifInUnknownProtos, ifOutDiscards, ifOutErrors
	- only show the details if one of these isn't zero
* Interesting wayts to connect html thingies:
	- http://jsplumb.org/doc/usage.html
	- http://js-graph-it.sourceforge.net/index.html
* UI
	- widget at upper left in window shows how deep naved in, click navs out
	- widget at entity upper right shows how far can nav in
	- widget at bottom left shows how far can zoom out
	- widget at bottom right shows how far can zoom in
	- can we have two names for in and out?
	- some entires could be just a label so maybe only show widgets when hover over
* Maps
	- snmp
	- rust docs
	- rust project
	- rust compiler
	- rust web site
	- coco dashboard
	- programmig tips
* HTML5 has notifications:
	- http://www.paulund.co.uk/html5-notifications
	- still not widely supported
* Might be able to use web storage to store the data required to handle time-based replay
	- or have the server persist old snapshots
	- maybe last N (if someone is viewing them could retain them all)
* HTML5 apparently does support extending the browser's context menu:
	- <section contextmenu="mymenu">
	  <!-- 
	    For the purpose of cleanliness, 
	    I'll put my menu inside the element that will use it 
	  -->
	
	  <!-- add the menu -->
	  <menu type="context" id="mymenu">
	    <menuitem label="Refresh Post" onclick="window.location.reload();" icon="/images/refresh-icon.png"></menuitem>
	    <menu label="Share on..." icon="/images/share_icon.gif">
	      <menuitem label="Twitter" icon="/images/twitter_icon.gif" onclick="goTo('//twitter.com/intent/tweet?text=' + document.title + ':  ' + window.location.href);"></menuitem>
	      <menuitem label="Facebook" icon="/images/facebook_icon16x16.gif" onclick="goTo('//facebook.com/sharer/sharer.php?u=' + window.location.href);"></menuitem>
	    </menu>
	  </menu>
	</section>
	- but it's not in chrome yet: http://caniuse.com/#search=contextmenu
* Switch to using libuv:
	- write a tcp example
	- don't use libc sleep
	- may want to timeout sse and connections
* Should be able to support different dashboard styles:
	- operational: largely an easy to interpret view of network health
	- analysis: details on network behavior
	- could probably do this via inspectors, toggling stuff on shifts the view more towards analysis
* Add support for remotely running tools:
	- use a config file with tool name, default command line template, html description
	- description could summarize most important options and have a link to man page
	- ping, tcpdump, mping, mgen, traceroute
	- config probably also needs something for results, either display stdout or download file
* Would be nice to support more entity shapes: rect, oval, circle, none
* Semantic styles would allow user customization
* OpenOntologyRepository (OOR) and Xmdr
	- also can use swoogle to search for ontologies
* Make gnos a sparql endpoint?
	- note that there is a protocol for this
* Netflow:
	Netflow Overview:
	http://www.cisco.com/en/US/prod/collateral/iosswrel/ps6537/ps6555/ps6601/prod_white_paper0900aecd80406232.html
	
	NetFlow Collectors:
	http://www.cisco.com/en/US/prod/iosswrel/ps6537/ps6555/ps6601/networking_solutions_products_genericcontent0900aecd805ff728.html
	http://www.plixer.com/Scrutinizer-Netflow-Sflow/scrutinizer-flow-analyzer.html
	http://www.paessler.com/prtg
	
	Router Howto:
	http://www.plixer.com/blog/netflow/cisco-netflow-sampling-configuration/
	
	Good Find:
	http://inetcon.org/study/CCIE_RS_Quick_Review_Kit_ver2_vol1.pdf
	
	Some Detection White Papers using NetFlow:
	http://www.caligare.com/articles/worms.php
	http://www.first.org/global/practices/Netflow.pdf
	http://www.cert.org/flocon/2011/presentations/Krmicek_Detecting.pdf
* Make sure subject view puts an upper bound on displayed object length.
* Would be nice to style changed labels:
	- for the map client could probably do this
	- for details seems like server would have to
* May want to use deps directory
	- update-libraries eithe git clones/pulls or uses subtrees
	- check-all runs all unit tests
	- make defaults to building everything
* Probably should have a pref to control canvas size (maybe on the map inspector).
* Use valid time? Also look at Owl-Time
* Should validate the network.json file.
* Might be nice if subject page color coded fields that change as new results come in.
* Protege is an open source ontology editor.
* Maybe allow people to do tcpdumps on device(s)
	- possibly use something like http://www.tcptrace.org/index.html views
* Make the licensing explicit
	- need to do this for other projects as well
* Might want an alert if ipForwarding is off and its a router
	- how do we know if its a router? quagga is running?
* What about icmp mib?
* Should be an alert if the server logs an #error.
* Alert if snmp-modeler takes to long to put:
	- either automatically or manually restart the script
* Might want to allows admins to create custom alerts:
	- data comes from a custom query
	- html comes from a template
* Quagga:
	- http://www.nongnu.org/quagga/docs/docs-info.html#SEC143
	   has lots of info on setting up quagga
	- http://www.net-track.ch/opensource/quagga-snmp/
	   patch for quagga to add snmp support to bdpd
* Examples:
	- zenoss
	- cacti
* Might need some sort of rdd database, see rrdtool
* Rmon
	- supports packet level stats
	- allows traps for stats that go above or below a threshold
* Admins should be able to set which origins the server accepts.
* Syslog can be used to send logs elsewhere
* Next generation network management
	- http://books.google.com/books?id=9WWereKFb54C&dq=rdf+schema+%22network+management%22&source=gbs_navlinks_s
* Add some more modelers
	- port scanners
	- syslogs
* OpenId can be used to identify users. OpenAuth can be used to authenticate them.


/Users/jessejones/Documents/Developer/rust.rtf
/Users/jessejones/Documents/javascript.rtf
/Users/jessejones/Documents/Developer/web.rtf
http://api.jquery.com/
