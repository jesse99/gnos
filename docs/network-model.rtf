{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red240\green0\blue31;\red0\green128\blue64;}
\deftab480
\pard\pardeftab480\pardirnatural

\f0\fs36 \cf0 This is the RDF schema for the information recorded by the default gnos modelers. Other information may be recorded by plugins, but that information will be defined by different schemas and stored in different rdf graphs. The information stored in the network model is assumed to be relatively stable.\
\
The schema is defined with the aid of a couple of different namespace prefixes:\
gnos - http://www.gnos.org/2012/schema#\
snmp - http://www.gnos.org/2012/snmp/\
xsd - http://www.w3.org/2001/XMLSchema#\
\
There are a few custom literal types:\
gnos:ip_address - IPv4 or IPv6 ip address\
gnos:ip_addresses - space separated list of ip_address\
gnos:ip_mask - netmask\
gnos:mac_address - mac address\
\
The schema is listed below. Note that the listed properties will always be\
present.\
\

\b\fs50 gnos:system\

\b0\fs36 gnos:last_update	xsd:dateTime\
\

\b\fs50 _:10.1.0.1\

\b0\fs36 gnos:managed_ip	gnos:ip_address						"10.1.0.1"\
gnos:name			xsd:string								may be "<unknown>"\
gnos:description		xsd:string                                  may be ""\
\
gnos:os				xsd:string                                 "Darwin"\
gnos:os_version		xsd:string                                 "Darwin Kernel Version 11.2.0\'85"\
gnos:architecture	xsd:string                                 "i386"\
gnos:gateway		gnos:ip_address                        <default gateway> or ""\
\
gnos:interface		blank									_:iface1\
gnos:interface		blank									_:iface2\
gnos:snmp			blank									_:device-snmp1\
\

\b\fs50 _:10.1.0.1-eth1\

\b0\fs36 gnos:ifname			xsd:string								"eth1"\
gnos:ip				gnos:ip_address\
gnos:netmask		gnos:ip_mask\
gnos:mac				gnos:mac_address\
\pard\pardeftab480\pardirnatural
\cf0 \strike \strikec0 gnos:flags			xsd:string                                 "UP,LOOPBACK,RUNNING,MULTICAST"\
\pard\pardeftab480\pardirnatural
\cf0 \strike0\striked0 gnos:mtu				xsd:integer                                1500\
gnos:enabled			xsd:boolean\
gnos:snmp			blank								_:iface-snmp1\
\
_:10.1.0.1-snmp											raw snmp data\
snmp:sysUpTime	xsd:string							all objects are string data\
...\
\
_:10.1.0.1-eth1-snmp									raw snmp data\
snmp:ifMtu			xsd:string							all objects are string data\
...\
\
\pard\pardeftab480\pardirnatural
\cf2 Probably should have description on interfaces (but how would we key them?).\cf0 \
\cf2 Description should be part of an admin graph?\
\
\
\
\
\pard\pardeftab480\pardirnatural

\b \cf0 store has raw snmp info\
\pard\pardeftab480\pardirnatural

\b0 \cf3 store can include arbitrary properties\cf0 \
\cf3 could provide an snmp viewer that pulls in MIBs to show help info\cf0 \
\cf2 hard to manage both snmp and non-snmp devices\
\
\pard\pardeftab480\pardirnatural

\b \cf0 store has standardized properties\
\pard\pardeftab480\pardirnatural

\b0 \cf2 difficult to preserve the detailed smnp semantics\
leads to lowest common denominator data\
\
\pard\pardeftab480\pardirnatural

\b \cf0 store has standardized properties as well as raw snmp\

\b0 snmp-10.101.0.2		sysUpTime		545\
\pard\pardeftab480\pardirnatural
\cf3 views can operate on common data\
views can still make use of modeler specific data\
\cf2 fair amount of data will be duplicated\
\pard\pardeftab480\pardirnatural
\cf0 \
\
\

\b get names and status for all devices\

\b0 \
SELECT\
	?name ?status\
WHERE\
	?device gnos:managed_ip ?ip .   # managed_ip is unique to devices so we can use it to enumerate devices\
	?device gnos:name ?name .\
	?device gnos:status ?status\
\

\b get details for device with a specific ip\

\b0 \
SELECT\
	?name ?status\
WHERE\
	?device gnos:managed_ip \{\{ip\}\} .\
	?device gnos:name ?name .\
	?device gnos:status ?status\
\

\b get specific interface for specific device\

\b0 \
SELECT\
	?status\
WHERE\
	?device gnos:managed_ip \{\{ip\}\} .\
	?device gnos:interface ?iface .\
	?iface gnos:name \{\{name\}\} .\
	?iface gnos:status ?status\
\

\b get snmp for a device with specific ip\

\b0 \
SELECT\
	?key ?value\
WHERE\
	?device gnos:managed_ip \{\{ip\}\} .\
	?device gnos:snmp ?snmp .\
	?snmp ?key ?value\
}