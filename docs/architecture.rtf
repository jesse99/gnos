{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;}
\deftab480
\pard\pardeftab480\pardirnatural

\f0\fs46 \cf0 Terms\
\pard\pardeftab480\pardirnatural

\b\fs28 \cf0 network model
\b0  - Common properties of the network persisted by gnos using RDF. \

\b network modeler
\b0  - Gnos task or custom processes that update the network model. Update interval is typically minutes or hours.\

\b sampled data
\b0  - Time series numeric data (e.g. bandwidth used on an interface).\

\b samplers
\b0  - Gnos task or custom processes that update sampled data. Update interval is typically in the low seconds range.\

\b plugins
\b0  - HTTP clients running on the server. Used to augment the network model or provide custom views.\
\pard\pardeftab480\pardirnatural
\cf0 \

\fs46 Operation\

\fs28 \'95\'a0Plugins can retrieve the network model.\
\'95 Plugins can retrieve system info (e.g. gnos resource root, server version, network model version).\
\'95 Plugins need a way to insert their own views (and maybe override standard views).\
\
\pard\pardeftab480\pardirnatural

\fs46 \cf0 Notes\
\pard\pardeftab480\pardirnatural

\fs28 \cf0 \'95\'a0Network modelers should support pushed updates as well as polling.\
\'95 Should allow custom network modelers to PUT information in different formats. Would probably need to have some sort of schema for the json or whatever data. Otoh the data isn't much use without custom views and the views probably need to understand RDF.\
\'95\'a0Where does sampled data go? Samplers can ask gnos for a path to dump it into? Or POST a chunk and have gnos store it into round robin database?\
\'95 Gnos could support viewing arbitrary charts for sampled data (would probably need to associate the data with a subject).\
\'95\'a0May want to maintain N backups of the network model (could see changes over time).\
\'95 Probably should allow plugins to send real queries against the network model. Maybe also include some common non-rdf-centric queris for the really common stuff.\
\'95 Would be nice if there was a way to view raw state of plugins.\
\
\
\'95 Having plugins be http clients or servers seems to introduce quite a bit of complexity (we don't need all of the features of http for interop and some components need to be both clients and servers). Maybe, instead processes could read/write json/http response from stdin/stdout. Could include path to model file.\
\'95\'a0Or maybe just require views to be written in rust. Could make it easy to define custom html templates (maybe some sort of rdf enabled version).}